version: "3.9"

volumes:
  nestjs-crm-postgres: {}

services:
  keycloak:
    container_name: keycloak-askadrovip
    image: quay.io/keycloak/keycloak:latest
    restart: always
    command: ["start-dev", '--import-realm']
    environment:
      KEYCLOAK_ADMIN: frintar
      KEYCLOAK_ADMIN_PASSWORD: 24262060
      KC_DB: postgres
      KC_DB_PASSWORD: 24262060
      KC_DB_USERNAME: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
    ports:
      - "8080:8080"
      - "8443:8443"
    networks:
      - mynetwork
    depends_on:
      - postgres
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/started" ]
#      interval: 30s
#      timeout: 10s
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json

  postgres:
    container_name: postgres-askadrovip
    restart: unless-stopped
    image: postgres
    ports:
      - '5432:5432'
    volumes:
      - nestjs-crm-postgres:/data/postgres
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    env_file:
      - .env
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  askadro-crm:
    container_name: nestjs-askadrovip
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5062:5062'
    depends_on:
      - keycloak
      - postgres
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    networks:
      - mynetwork


networks:
  mynetwork:
    driver: bridge
